package idv.camille;

public class TransportationFactory {

	 private static IfTransportation jeep = null;
	 private static IfTransportation train = null;
	 private static IfTransportation van = null;
	 
	 private TransportationFactory(){
		 
	 }
	 
	 //Singleton
	//singleton pattern
		public static IfTransportation getInstance() {
			//double-checked locking
			if(jeep == null) {
				synchronized(AServiceFactory.class) {
					if(jeep == null) {
						jeep = new Jeep();
					}
				}
			}
			
			if(aaservice == null) {
				synchronized(AServiceFactory.class) {
					if(aaservice == null) {
						aaservice = new AService();
					}
				}
			}
			
			if(enu.equals(IfAServiceEnum.AService)) {
				return aservice;
			}
			
			if(enu.equals(IfAServiceEnum.AAService)) {
				return aaservice;
			}
			return null;
		}
	
}
