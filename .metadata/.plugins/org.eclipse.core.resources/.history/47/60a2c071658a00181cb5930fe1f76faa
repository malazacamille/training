package com.training.model;

import java.util.Collections;
import java.util.LinkedList;
import java.util.List;

public class Deck {
	private List<Card> deck = new LinkedList<Card>();
    public Deck() {
        for(Suit suit : Suit.values()) {
            for(Value value :Value.values()) {
                deck.add(new Card(suit,value));
            }
        }
        shuffle();
    }
    
    
    public List<Card> getDeck() {
		return deck;
	}


	public void setDeck(List<Card> deck) {
		this.deck = deck;
	}


	public void shuffle() {
        Collections.shuffle(deck);
    }
    public int cardsLeft() {
     
        return deck.size();
    }
    public Card dealCard() {
          // Deals one card from the deck and returns it.
        if (deck.size() == 52) {
           shuffle();
        }
        Card temp;
        temp = deck.get(0);
        remove(0);
        return temp;
    }
    public Card getCard(int i) throws Exception {
    	if(i > cardsLeft()) {
    		throw new IndexOutOfBoundsException("No Cards Left");
    	}else
        return deck.get(i);
    }
    public Card remove(int i) {
        Card c = deck.get(i);
        deck.remove(i);
        return c;
    }


	@Override
	public String toString() {
		return "Deck [deck=" + deck + "]";
	}   
    
    

}
